[{"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\index.js":"1","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\App.js":"2","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\ApolloProvider.js":"3","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\hooks\\useHandleErrors.js":"4","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\Register.js":"5","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\Login.js":"6","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\utils\\formik.js":"7","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Login\\Login.js":"8","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Register\\Register.js":"9","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Home.js":"10","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\StateLayer\\StateLayer.js":"11","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\StateLayer\\reducer.js":"12","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\utils\\token.js":"13","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\components\\AuthGuard.js":"14","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\queries\\Users.js":"15","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Header.js":"16","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\queries\\Messages.js":"17","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\hooks\\HomeHooks.js":"18","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\UserList.js":"19","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Messages.js":"20","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Message.js":"21","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\UserItem.js":"22","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Footer.js":"23","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\AddMessage.js":"24","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\hooks\\useResizeHandler.js":"25","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\subscriptions\\MessageSent.js":"26","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\ReactToMessage.js":"27"},{"size":286,"mtime":1616028503629,"results":"28","hashOfConfig":"29"},{"size":1006,"mtime":1616553406855,"results":"30","hashOfConfig":"29"},{"size":1258,"mtime":1617110797653,"results":"31","hashOfConfig":"29"},{"size":756,"mtime":1615744058638,"results":"32","hashOfConfig":"29"},{"size":457,"mtime":1615744703259,"results":"33","hashOfConfig":"29"},{"size":454,"mtime":1616028831514,"results":"34","hashOfConfig":"29"},{"size":1422,"mtime":1615749248798,"results":"35","hashOfConfig":"29"},{"size":4461,"mtime":1616376806037,"results":"36","hashOfConfig":"29"},{"size":7225,"mtime":1615771844114,"results":"37","hashOfConfig":"29"},{"size":674,"mtime":1617112829751,"results":"38","hashOfConfig":"29"},{"size":557,"mtime":1617240812712,"results":"39","hashOfConfig":"29"},{"size":1671,"mtime":1617322000590,"results":"40","hashOfConfig":"29"},{"size":370,"mtime":1616347046644,"results":"41","hashOfConfig":"29"},{"size":284,"mtime":1616377756388,"results":"42","hashOfConfig":"29"},{"size":358,"mtime":1616360502928,"results":"43","hashOfConfig":"29"},{"size":843,"mtime":1616553406357,"results":"44","hashOfConfig":"29"},{"size":386,"mtime":1617322169321,"results":"45","hashOfConfig":"29"},{"size":2437,"mtime":1617321936347,"results":"46","hashOfConfig":"29"},{"size":1140,"mtime":1616636099425,"results":"47","hashOfConfig":"29"},{"size":1280,"mtime":1617325420978,"results":"48","hashOfConfig":"29"},{"size":2938,"mtime":1617326433824,"results":"49","hashOfConfig":"29"},{"size":772,"mtime":1616467269454,"results":"50","hashOfConfig":"29"},{"size":1427,"mtime":1617158118096,"results":"51","hashOfConfig":"29"},{"size":898,"mtime":1616550114962,"results":"52","hashOfConfig":"29"},{"size":843,"mtime":1616636805109,"results":"53","hashOfConfig":"29"},{"size":423,"mtime":1617322109593,"results":"54","hashOfConfig":"29"},{"size":377,"mtime":1617314592529,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1071oal",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\index.js",[],["119","120"],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\App.js",["121"],"import React from 'react';\nimport './App.scss';\nimport { Container } from 'react-bootstrap';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport { apolloClient } from './graphql/ApolloProvider';\nimport Login from './pages/Login/Login';\nimport Register from './pages/Register/Register';\nimport Home from './pages/Home/Home';\nimport AuthGuard from './components/AuthGuard';\nimport { useStateLayer } from './StateLayer/StateLayer';\n\nfunction App() {\n\n  const [{ isAuthenticated }] = useStateLayer();\n\n  return (\n    <Router>\n      <Switch>\n        <ApolloProvider client={apolloClient}>\n          <Container>\n            <AuthGuard exact path='/' authenticated={isAuthenticated} component={Home} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/login\" component={Login} />\n          </Container>\n        </ApolloProvider>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\ApolloProvider.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\hooks\\useHandleErrors.js",["122"],"import React from 'react';\r\n\r\nconst initialState = {\r\n    username: '',\r\n    email: '',\r\n    password: ''\r\n};\r\n\r\nexport const useHandleErrors = () => {\r\n    const [errors, setErrors] = React.useState(initialState);\r\n\r\n    const handleErrors = (responseError) => {\r\n        let errorObj = { email: '', password: '' };\r\n        responseError.map(error => {\r\n            if (error.message.indexOf('Email') > -1) {\r\n                errorObj.email = error.message;\r\n            }\r\n\r\n            if (error.message.indexOf('Password') > -1) {\r\n                errorObj.password = error.message;\r\n            }\r\n        });\r\n\r\n        setErrors(errorObj);\r\n    }\r\n\r\n    const reset = () => setErrors(initialState);\r\n\r\n    return { errors, handleErrors, reset };\r\n}",["123","124"],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\Register.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\Login.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\utils\\formik.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Login\\Login.js",["125","126"],"import React from 'react'\r\nimport { useMutation } from '@apollo/client';\r\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { LOGIN } from '../../graphql/mutations/Login';\r\nimport { useFormik } from 'formik';\r\nimport { initialValues, loginValidation } from '../../utils/formik';\r\nimport './Login.scss';\r\nimport { useStateLayer } from '../../StateLayer/StateLayer';\r\n\r\nexport default function Login() {\r\n    const [state, dispatch] = useStateLayer();\r\n\r\n    const [loginUser, { loading, error }] = useMutation(LOGIN, {\r\n        onCompleted({ login }) {\r\n\r\n            if (login.error?.length) {\r\n                setErrorMessage(login.error[0].message);\r\n                setTimeout(() => setErrorMessage(''), 6000);\r\n            } else {\r\n                dispatch({ type: 'LOGIN', payload: login.user })\r\n                localStorage.setItem('token', login.token);\r\n                setTimeout(() => history.push('/'), 100);\r\n            }\r\n        }\r\n    });\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n\r\n    const history = useHistory();\r\n\r\n    const {\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        errors,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validate: loginValidation,\r\n        onSubmit: () => loginUser({ variables: { email: values.email, password: values.password } })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {errorMessage &&\r\n                <Alert variant=\"danger\" className=\"login__errorAlert\">{errorMessage}</Alert>\r\n\r\n            }\r\n            <Row className=\"justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n                <Col sm={8} md={6} lg={4} className=\"bg-white py-5 p-md-3 rounded\">\r\n                    <h1 className=\"text-center\">Log In</h1>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter Email\"\r\n                                name=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={errors.email && touched.email ? 'is-invalid' : null}\r\n                            />\r\n                            {errors.email && touched.email &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>\r\n                                    {errors.email}\r\n                                </Form.Text>\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Enter Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"*********\"\r\n                                name=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={errors.password && touched.password ? 'is-invalid' : null}\r\n                            />\r\n                            {errors.password && touched.password &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>{errors.password}</Form.Text>\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <div className=\"text-center mt-4\">\r\n                            <Button\r\n                                variant=\"success\"\r\n                                type=\"submit\"\r\n                                className=\"btn-block\"\r\n                                disabled={Object.keys(errors).length}\r\n                            >\r\n                                {loading ? 'Loading' : 'Login'}\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                    <span className=\"d-block mt-3 text-center\">\r\n                        Already have an account?\r\n                        <Link to='/register'>Register</Link>\r\n                    </span>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Register\\Register.js",["127","128","129","130"],"import React from 'react'\r\nimport { Row, Col, Form, Button, Alert } from 'react-bootstrap';\r\nimport { useMutation } from '@apollo/client';\r\nimport { Link } from 'react-router-dom';\r\nimport { REGISTER_USER } from '../../graphql/mutations/Register';\r\nimport { signUpValidation, initialValues } from '../../utils/formik';\r\nimport { useFormik } from 'formik';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './Register.scss';\r\n\r\n\r\nexport default function Register() {\r\n    const [registerUser, { loading }] = useMutation(REGISTER_USER, {\r\n        onCompleted({ register }) {\r\n            if (register.error?.length) {\r\n                setErrorMessage(register.error[0].message);\r\n                setTimeout(() => setErrorMessage(''), 6000);\r\n            }\r\n        },\r\n        update(_, __) {\r\n            history.push('/login');\r\n        }\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const [errorMessage, setErrorMessage] = React.useState('');\r\n\r\n    const {\r\n        handleSubmit,\r\n        handleChange,\r\n        handleBlur,\r\n        values,\r\n        errors,\r\n        touched\r\n    } = useFormik({\r\n        initialValues,\r\n        validate: signUpValidation,\r\n        onSubmit: () => registerUser({\r\n            variables: {\r\n                username: values.username,\r\n                email: values.email,\r\n                password: values.password\r\n            }\r\n        })\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {errorMessage &&\r\n                <Alert variant=\"danger\" className=\"register__errorMessage\">{errorMessage}</Alert>\r\n            }\r\n            <Row className=\"justify-content-center align-items-center\" style={{ height: '100vh' }}>\r\n                <Col sm={8} md={6} lg={4} className=\"bg-white py-5 p-md-3 rounded\">\r\n                    <h1 className=\"text-center\">Register</h1>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Form.Group>\r\n                            <Form.Label className={errors.username && touched.username && 'text-danger'}>\r\n                                Username\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Enter username\"\r\n                                name=\"username\"\r\n                                value={values.username}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={errors.username && touched.username ? 'is-invalid' : null}\r\n                            />\r\n                            {errors.username && touched.username &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>\r\n                                    {errors.username}\r\n                                </Form.Text>\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label className={errors.email && touched.email && 'text-danger'}>\r\n                                Email address\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Enter email\"\r\n                                name=\"email\"\r\n                                value={values.email}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={errors.email && touched.email ? 'is-invalid' : null}\r\n                            />\r\n\r\n                            {errors.email && touched.email &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>\r\n                                    {errors.email}\r\n                                </Form.Text>\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label\r\n                                className={\r\n                                    (errors.password && touched.password\r\n                                        || errors.passwordValidators && touched.password)\r\n                                    && 'text-danger'}\r\n                            >\r\n                                Enter Password</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"*********\"\r\n                                name=\"password\"\r\n                                value={values.password}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={errors.password && touched.password ? 'is-invalid' : null}\r\n                            />\r\n                            {touched.password && (errors.password) &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>{errors.password}</Form.Text>\r\n                            }\r\n                            {errors.passwordValidators && touched.password &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>{errors.passwordValidators}</Form.Text>\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label\r\n                                className={touched.confirmPassword && errors.confirmPassword && 'text-danger'}>\r\n                                Confirm Password\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm password\"\r\n                                name=\"confirmPassword\"\r\n                                value={values.confirmPassword}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                className={touched.confirmPassword && errors.confirmPassword ? 'is-invalid' : null}\r\n                            />\r\n                            {touched.confirmPassword && errors.confirmPassword &&\r\n                                <Form.Text style={{ color: '#dc3545' }}>{errors.confirmPassword}</Form.Text>\r\n                            }\r\n                        </Form.Group>\r\n\r\n                        <div className=\"text-center mt-4\">\r\n                            <Button\r\n                                variant=\"success\"\r\n                                type=\"submit\"\r\n                                className=\"btn-block\"\r\n                                disabled={Object.keys(errors).length}\r\n                            >\r\n                                {loading ? 'Loading...' : 'Register'}\r\n                            </Button>\r\n                        </div>\r\n                    </Form>\r\n                    <span className=\"d-block mt-3 text-center\">\r\n                        Don't you have an account?\r\n                    <Link to='/login'>Log In</Link>\r\n                    </span>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Home.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\StateLayer\\StateLayer.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\StateLayer\\reducer.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\utils\\token.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\components\\AuthGuard.js",["131"],"import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport default ({ component: Component, authenticated,...rest }) => {\r\n\r\n    return <Route\r\n        {...rest}\r\n        render={() => !authenticated ? <Redirect to='/login' /> : <Component />}\r\n    />\r\n}","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\queries\\Users.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Header.js",["132"],"import React from 'react'\r\nimport { Row, Button } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nexport default function Header({dispatch}) {\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n        dispatch({ type: 'LOGOUT' });\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login';\r\n    };\r\n    return (\r\n        <Row className=\"mt-3 bg-white justify-content-around home__header\">\r\n            <Link to=\"/login\">\r\n                <Button variant=\"link\">Login</Button>\r\n            </Link>\r\n\r\n            <Link to=\"/register\">\r\n                <Button variant=\"link\">Register</Button>\r\n            </Link>\r\n\r\n            <Link to=\"/login\">\r\n                <Button onClick={logout} variant=\"link\">Logout</Button>\r\n            </Link>\r\n        </Row>\r\n    )\r\n}\r\n","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\queries\\Messages.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\hooks\\HomeHooks.js",["133","134","135","136"],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\UserList.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Messages.js",["137"],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Message.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\UserItem.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\Home\\Footer.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\AddMessage.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\pages\\hooks\\useResizeHandler.js",["138","139"],"import React from 'react';\r\nimport { useStateLayer } from \"../../StateLayer/StateLayer\";\r\n\r\nexport function useResizeHandler() {\r\n    const [{ userListOffsetHeight }, dispatch] = useStateLayer();\r\n    const ref = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        if (ref) {\r\n            dispatch({ type: 'SET_USER_LIST_OFFSET_HEIGHT', payload: ref.current?.offsetWidth })\r\n        }\r\n    }, [ref]);\r\n\r\n    React.useEffect(() => {\r\n        const handleResize = () => {\r\n            if (ref.current?.offsetWidth !== userListOffsetHeight) {\r\n                dispatch({ type: 'SET_USER_LIST_OFFSET_HEIGHT', payload: ref.current?.offsetWidth });\r\n            }\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, [])\r\n\r\n    return { ref }\r\n}","C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\subscriptions\\MessageSent.js",[],"C:\\Users\\agustin\\Documents\\programming\\react\\1.chat-app\\client\\src\\graphql\\mutations\\ReactToMessage.js",[],{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","severity":1,"message":"145","line":4,"column":50,"nodeType":"146","messageId":"147","endLine":4,"endColumn":58},{"ruleId":"148","severity":1,"message":"149","line":14,"column":33,"nodeType":"150","messageId":"151","endLine":14,"endColumn":35},{"ruleId":"140","replacedBy":"152"},{"ruleId":"142","replacedBy":"153"},{"ruleId":"144","severity":1,"message":"154","line":12,"column":12,"nodeType":"146","messageId":"147","endLine":12,"endColumn":17},{"ruleId":"144","severity":1,"message":"155","line":14,"column":34,"nodeType":"146","messageId":"147","endLine":14,"endColumn":39},{"ruleId":"156","severity":1,"message":"157","line":101,"column":54,"nodeType":"158","messageId":"159","endLine":101,"endColumn":56},{"ruleId":"156","severity":1,"message":"157","line":102,"column":41,"nodeType":"158","messageId":"159","endLine":102,"endColumn":43},{"ruleId":"156","severity":1,"message":"160","line":102,"column":41,"nodeType":"158","messageId":"159","endLine":102,"endColumn":43},{"ruleId":"156","severity":1,"message":"160","line":102,"column":70,"nodeType":"158","messageId":"159","endLine":102,"endColumn":72},{"ruleId":"161","severity":1,"message":"162","line":4,"column":1,"nodeType":"163","endLine":10,"endColumn":2},{"ruleId":"144","severity":1,"message":"164","line":6,"column":11,"nodeType":"146","messageId":"147","endLine":6,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":27,"column":8,"nodeType":"167","endLine":27,"endColumn":22,"suggestions":"168"},{"ruleId":"165","severity":1,"message":"169","line":34,"column":8,"nodeType":"167","endLine":34,"endColumn":22,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"169","line":38,"column":8,"nodeType":"167","endLine":38,"endColumn":25,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"172","line":64,"column":8,"nodeType":"167","endLine":64,"endColumn":26,"suggestions":"173"},{"ruleId":"144","severity":1,"message":"174","line":5,"column":8,"nodeType":"146","messageId":"147","endLine":5,"endColumn":14},{"ruleId":"165","severity":1,"message":"169","line":12,"column":8,"nodeType":"167","endLine":12,"endColumn":13,"suggestions":"175"},{"ruleId":"165","severity":1,"message":"176","line":23,"column":8,"nodeType":"167","endLine":23,"endColumn":10,"suggestions":"177"},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["178"],["179"],"'state' is assigned a value but never used.","'error' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'getMessages'. Either include them or remove the dependency array.","ArrayExpression",["180"],"React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["181"],["182"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'messages', 'messagesBackup', 'selectedUser', and 'user.id'. Either include them or remove the dependency array.",["183"],"'Footer' is defined but never used.",["184"],"React Hook React.useEffect has missing dependencies: 'dispatch' and 'userListOffsetHeight'. Either include them or remove the dependency array.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [dispatch, getMessages, selectedUser]",{"range":"198","text":"199"},"Update the dependencies array to be: [dispatch, messagesData]",{"range":"200","text":"201"},"Update the dependencies array to be: [dispatch, messagesLoading]",{"range":"202","text":"203"},"Update the dependencies array to be: [dispatch, messages, messagesBackup, selectedUser, subscriptionData, user.id]",{"range":"204","text":"205"},"Update the dependencies array to be: [dispatch, ref]",{"range":"206","text":"207"},"Update the dependencies array to be: [dispatch, userListOffsetHeight]",{"range":"208","text":"209"},[1032,1046],"[dispatch, getMessages, selectedUser]",[1275,1289],"[dispatch, messagesData]",[1408,1425],"[dispatch, messagesLoading]",[2363,2381],"[dispatch, messages, messagesBackup, selectedUser, subscriptionData, user.id]",[397,402],"[dispatch, ref]",[815,817],"[dispatch, userListOffsetHeight]"]